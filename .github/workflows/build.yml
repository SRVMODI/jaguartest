name: "build-test-dev"
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '*.md'
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup MSBuild (vswhere-path)
      id: setup_msbuild_explicit
      uses: ./

    - name: Setup MSBuild (PATH)
      id: setup_msbuild_path
      uses: ./

    - name: Setup MSBuild (fallback)
      id: setup_msbuild_fallback
      uses: ./

    - name: Setup MSBuild (x64)
      if: always()
      id: setup_msbuild_path_x64
      uses: ./
      with:
        vs-prerelease: true
        msbuild-architecture: 'x64'

    - name: Setup MSBuild (arm64)
      if: always()
      id: setup_msbuild_path_arm
      uses: ./
      with:
        vs-prerelease: true
        msbuild-architecture: 'arm64'

    - name: echo msbuild path
      run: |
        echo "PATH: ${{ steps.setup_msbuild_path.outputs.msbuildPath }}"
        echo "ARM PATH: ${{ steps.setup_msbuild_path_arm.outputs.msbuildPath }}"
        echo "ARM PATH: ${{ steps.setup_msbuild_path_x64.outputs.msbuildPath }}"
        echo "Fallback: ${{ steps.setup_msbuild_fallback.outputs.msbuildPath }}"

    - name: echo MSBuild
      run: msbuild -version
    - name: Build and analyze
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"procter-gamble_Jaguar" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
  
